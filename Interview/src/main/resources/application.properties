spring.application.name=Interview
server.port=7070

#SQL Server
spring.datasource.url=jdbc:sqlserver://sqlserver:1433;databaseName=master;encrypt=true;trustServerCertificate=true
spring.datasource.username=sa
spring.datasource.password=Passw0rd
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# H2 Database Configuration
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create

# H2 Console Configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console


server.servlet.context-path=/userservice
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Kafka broker(s)
spring.kafka.bootstrap-servers=localhost:9092

# Consumer config
spring.kafka.consumer.group-id=payment-router
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Topic names (optional if hardcoded in code, but can be injected via @Value)
app.kafka.topic.input=payments.incoming
app.kafka.topic.inward=payments.inward
app.kafka.topic.outward=payments.outward
